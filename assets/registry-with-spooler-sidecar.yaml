apiVersion: apps/v1
kind: Deployment

metadata:
  name: registry
  labels:
    app.kubernetes.io/name: registry

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: registry
  template:
    metadata:
      labels:
        app.kubernetes.io/name: registry
    spec:
      containers:

      - name: registry
        image: docker.io/library/registry:latest
        volumeMounts:
        - name: registry
          mountPath: /var/lib/registry
        - name: tls
          mountPath: /tls
        - name: auth
          mountPath: /auth
        env:
        - name: REGISTRY_STORAGE_DELETE_ENABLED
          value: 'true'
        # Secret is optional (it will be randomly generated otherwise)
        - name: REGISTRY_HTTP_SECRET
          value: secret
        # TLS
        - name: REGISTRY_HTTP_TLS_CERTIFICATE
          value: /tls/tls.crt
        - name: REGISTRY_HTTP_TLS_KEY
          value: /tls/tls.key
        # Auth
        - name: REGISTRY_AUTH
          value: htpasswd
        - name: REGISTRY_AUTH_HTPASSWD_PATH
          value: /auth/registry-htpasswd
        - name: REGISTRY_AUTH_HTPASSWD_REALM
          value: Registry
        # Probes skip certificate validation for HTTPS, so self-signed certificates are always OK
        livenessProbe:
          httpGet:
            port: 5000
            scheme: HTTPS
        readinessProbe:
          httpGet:
            port: 5000
            scheme: HTTPS

      - name: spooler
        image: docker.io/tliron/kubernetes-registry-spooler:latest
        volumeMounts:
        - name: spool
          mountPath: /spool
        - name: tls
          mountPath: /tls
        env:
        # Vars with the "REGISTRY_SPOOLER_" prefix become CLI flags 
        - name: REGISTRY_SPOOLER_registry
          value: localhost:5000
        - name: REGISTRY_SPOOLER_certificate
          value: /tls/tls.crt
        - name: REGISTRY_SPOOLER_username
          value: username
        - name: REGISTRY_SPOOLER_password
          value: password
        - name: REGISTRY_SPOOLER_verbose
          value: '2'
        # A future version of Kubernetes may allow for this:
        # lifecycle:
        #   type: sidecar
        # See: https://github.com/kubernetes/enhancements/blob/master/keps/sig-apps/sidecarcontainers.md
        #      https://banzaicloud.com/blog/k8s-sidecars/
        livenessProbe:
          httpGet:
            port: 8086
            path: /live
        readinessProbe:
          httpGet:
            port: 8086
            path: /ready

      volumes:
      - name: registry
        emptyDir: {}
      - name: spool
        emptyDir: {}
      - name: tls
        secret:
          secretName: registry-tls
      - name: auth
        secret:
          secretName: registry-auth

---

apiVersion: cert-manager.io/v1
kind: Issuer

metadata:
  name: registry
  labels:
    app.kubernetes.io/name: registry

spec:
  selfSigned: {}

---

apiVersion: cert-manager.io/v1
kind: Certificate

metadata:
  name: registry
  labels:
    app.kubernetes.io/name: registry

spec:
  secretName: registry-tls
  dnsNames:
  - localhost
  uris:
  - https://github.com/tliron/kubernetes-registry-spooler
  issuerRef:
    name: registry
